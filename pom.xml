<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.trellisldp</groupId>
  <artifactId>trellis-micro</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>Trellis ÂµProfile</name>
  <description>Trellis deployable application using Eclipse MicroProfile</description>

  <url>https://www.trellisldp.org</url>
  <inceptionYear>2019</inceptionYear>
  <organization>
    <name>Trellis LDP</name>
    <url>https://www.trellisldp.org</url>
  </organization>
  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0</url>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>ajs6f</id>
    </developer>
  </developers>
  <scm>
    <connection>scm:git:https://github.com/trellis-ldp/trellis-micro.git</connection>
    <developerConnection>scm:git:git@github.com:trellis-ldp/trellis-micro.git</developerConnection>
    <url>https://github.com/trellis-ldp/trellis-micro</url>
  </scm>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>

    <trellis.version>0.9.0-SNAPSHOT</trellis.version>
    <trellisdb.version>0.3.0-SNAPSHOT</trellisdb.version>
    <javaee.version>8.0</javaee.version>
    <junit.version>5.4.2</junit.version>

    <package.name>${project.build.directory}/${project.artifactId}.zip</package.name>
    <package.type>usr</package.type>

  </properties>

  <packaging>war</packaging>

  <repositories>
    <repository>
      <id>sonasnap</id>
      <name>Sonatype Snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </snapshots>
    </repository>
  </repositories>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.openliberty.features</groupId>
        <artifactId>features-bom</artifactId>
        <version>RELEASE</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Trellis components -->
    <dependency>
      <groupId>org.trellisldp</groupId>
      <artifactId>trellis-http</artifactId>
      <version>${trellis.version}</version>
    </dependency>
    <dependency>
      <groupId>org.trellisldp</groupId>
      <artifactId>trellis-io-jena</artifactId>
      <version>${trellis.version}</version>
    </dependency>
    <dependency>
      <groupId>org.trellisldp</groupId>
      <artifactId>trellis-agent</artifactId>
      <version>${trellis.version}</version>
    </dependency>
    <dependency>
      <groupId>org.trellisldp</groupId>
      <artifactId>trellis-file</artifactId>
      <version>${trellis.version}</version>
    </dependency>
    <dependency>
      <groupId>org.trellisldp.ext</groupId>
      <artifactId>trellis-db</artifactId>
      <version>${trellisdb.version}</version>
    </dependency>
    <dependency>
      <groupId>org.trellisldp</groupId>
      <artifactId>trellis-jms</artifactId>
      <version>${trellis.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.tamaya</groupId>
      <artifactId>tamaya-api</artifactId>
      <version>0.4-incubating-SNAPSHOT</version>
    </dependency>
    <!-- MicroProfile API -->
    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-web-api</artifactId>
      <version>${javaee.version}</version>
      <scope>provided</scope>
    </dependency>
    <!-- Open Liberty Features -->
    <dependency>
      <groupId>io.openliberty.features</groupId>
      <artifactId>jaxrs-2.1</artifactId>
      <type>esa</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.openliberty.features</groupId>
      <artifactId>jsonp-1.1</artifactId>
      <type>esa</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.openliberty.features</groupId>
      <artifactId>cdi-2.0</artifactId>
      <type>esa</type>
      <scope>provided</scope>
    </dependency>

    <!-- Logging -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.3</version>
    </dependency>

    <!-- Testing -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.2.3</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <portNames>
            <portName>testServerHttpPort</portName>
            <portName>cassandra.jmxPort</portName>
          </portNames>
        </configuration>
        <executions>
          <execution>
            <id>reserve-network-port</id>
            <goals>
              <goal>reserve-network-port</goal>
            </goals>
            <phase>process-test-resources</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>net.wasdev.wlp.maven.plugins</groupId>
        <artifactId>liberty-maven-plugin</artifactId>
        <version>2.6.4</version>
        <extensions>true</extensions>
        <configuration>
          <assemblyArtifact>
            <groupId>io.openliberty</groupId>
            <artifactId>openliberty-runtime</artifactId>
            <version>RELEASE</version>
            <type>zip</type>
          </assemblyArtifact>
          <serverName>test-${project.artifactId}</serverName>
          <stripVersion>true</stripVersion>
          <packageFile>${package.name}</packageFile>
          <include>${package.type}</include>
          <bootstrapProperties>
            <default.http.port>${testServerHttpPort}</default.http.port>
            <app.context.root>${project.artifactId}</app.context.root>
            <consoleLogLevel>INFO</consoleLogLevel>
          </bootstrapProperties>
        </configuration>
        <executions>
          <execution>
            <id>stop-server-before-clean</id>
            <phase>pre-clean</phase>
            <goals>
              <goal>stop-server</goal>
            </goals>
          </execution>
          <execution>
            <id>create-server</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>install-server</goal>
              <goal>create-server</goal>
            </goals>
          </execution>
          <execution>
            <id>install-feature</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>install-feature</goal>
            </goals>
            <configuration>
              <outputDirectory>{project.build.directory}/liberty-alt-output-dir</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>install-apps</id>
            <phase>package</phase>
            <goals>
              <goal>install-apps</goal>
            </goals>
            <configuration>
              <appsDirectory>apps</appsDirectory>
              <stripVersion>true</stripVersion>
              <installAppPackages>project</installAppPackages>
              <looseApplication>true</looseApplication>
            </configuration>
          </execution>
          <execution>
            <id>package-server</id>
            <phase>package</phase>
            <goals>
              <goal>package-server</goal>
            </goals>
          </execution>
          <execution>
            <id>test-start-server</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>test-start-server</goal>
            </goals>
            <configuration>

            </configuration>
          </execution>
          <execution>
            <id>test-stop-server</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>test-stop-server</goal>
            </goals>
          </execution>
        </executions>

      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.0.0-M3</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <systemPropertyVariables>
                <testServerHttpPort>${testServerHttpPort}</testServerHttpPort>
              </systemPropertyVariables>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>

  </build>

  <profiles>
    <profile>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>

      </properties>
    </profile>

  </profiles>

</project>
